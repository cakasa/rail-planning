(define (problem problem04) (:domain servicing-no-fluents)
(:objects
    train1 - slt
    train2 - sng
    train3 - sng
    train4 - slt
    train5 - sng
    v1 v2 v3 v4 v5 v6 v7 v8 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 - trackpart
    track0 track1 track2 track3 track4 track5 track6 track7 track8 track9 track10 - track
    inspection cleaning - service
)
(:init
    ; Initialize trains
    (at train1 v1)
    (beginsAt train1 v1)
    (endsAt train1 v1)
    (needsService train1 cleaning)

    (at train2 v2)
    (beginsAt train2 v2)
    (endsAt train2 v2)
    (needsService train2 inspection)

    (at train3 v3)
    (at train3 v4)
    (beginsAt train3 v3)
    (endsAt train3 v4)

    (at train4 v5)
    (at train4 v6)
    (beginsAt train4 v5)
    (endsAt train4 v6)

    (at train5 v7)
    (at train5 v8)
    (beginsAt train5 v7)
    (endsAt train5 v8)

    ; Set adjacency of path nodes
    (nextTo v1 v2)
    (nextTo v2 v1)
    (nextTo v2 v3)
    (nextTo v3 v2)
    (nextTo v3 v4)
    (nextTo v4 v3)
    (nextTo v4 v5)
    (nextTo v5 v4)
    (nextTo v5 v6)
    (nextTo v6 v5)
    (nextTo v6 v7)
    (nextTo v7 v6)
    (nextTo v7 v8)
    (nextTo v8 v7)
    ; Connect path to first non-path node
    (nextTo v1 t0)
    (nextTo t0 v1)
    ; Set adjacency of nodes on the same track
    (nextTo t1 t2)
    (nextTo t2 t1)
    (nextTo t3 t4)
    (nextTo t4 t3)
    (nextTo t5 t6)
    (nextTo t6 t5)
    (nextTo t7 t8)
    (nextTo t8 t7)
    (nextTo t9 t10)
    (nextTo t10 t9)
    (nextTo t11 t12)
    (nextTo t12 t11)
    (nextTo t13 t14)
    (nextTo t14 t13)
    (nextTo t15 t16)
    (nextTo t16 t15)
    (nextTo t17 t18)
    (nextTo t18 t17)
    (nextTo t19 t20)
    (nextTo t20 t19)
    ; Connect adjacent tracks
    (nextTo t0 t1)
    (nextTo t1 t0)
    (nextTo t0 t3)
    (nextTo t3 t0)
    (nextTo t4 t5)
    (nextTo t5 t4)
    (nextTo t4 t7)
    (nextTo t7 t4)
    (nextTo t8 t9)
    (nextTo t9 t8)
    (nextTo t8 t11)
    (nextTo t11 t8)
    (nextTo t8 t13)
    (nextTo t13 t8)
    (nextTo t8 t15)
    (nextTo t15 t8)
    (nextTo t8 t17)
    (nextTo t17 t8)
    (nextTo t8 t19)
    (nextTo t19 t8)

    ; Set all non-path nodes as free
    (free t0)
    (free t1)
    (free t2)
    (free t3)
    (free t4)
    (free t5)
    (free t6)
    (free t7)
    (free t8)
    (free t9)
    (free t10)
    (free t11)
    (free t12)
    (free t13)
    (free t14)
    (free t15)
    (free t16)
    (free t17)
    (free t18)
    (free t19)
    (free t20)

    ; Add path nodes to path
    (onPath v1)
    (onPath v2)
    (onPath v3)
    (onPath v4)
    (onPath v5)
    (onPath v6)
    (onPath v7)
    (onPath v8)

    ; Assign nodes to tracks
    (onTrack t0 track0)
    (onTrack t1 track1)
    (onTrack t2 track1)
    (onTrack t3 track2)
    (onTrack t4 track2)
    (onTrack t5 track3)
    (onTrack t6 track3)
    (onTrack t7 track4)
    (onTrack t8 track4)
    (onTrack t9 track5)
    (onTrack t10 track5)
    (onTrack t11 track6)
    (onTrack t12 track6)
    (onTrack t13 track7)
    (onTrack t14 track7)
    (onTrack t15 track8)
    (onTrack t16 track8)
    (onTrack t17 track9)
    (onTrack t18 track9)
    (onTrack t19 track10)
    (onTrack t20 track10)

    ; Set tracks as service ones
    (isServiceTrack track1 cleaning)
    (isServiceTrack track8 inspection)
)
(:goal (and
    (forall (?t - trainunit) (and (hasDeparted ?t) (hasBeenParked ?t)))
    (forall (?t - trainunit ?s - service) (not (needsService ?t ?s)))
    (at train2 v1)
    (beginsAt train2 v1)
    (endsAt train2 v1)
    (at train1 v2)
    (beginsAt train1 v2)
    (endsAt train1 v2)
    (at train3 v3)
    (at train3 v4)
    (beginsAt train3 v4)
    (endsAt train3 v3)
    (at train4 v5)
    (at train4 v6)
    (beginsAt train4 v6)
    (endsAt train4 v5)
    (at train5 v7)
    (at train5 v8)
    (beginsAt train5 v8)
    (endsAt train5 v7)
)))
