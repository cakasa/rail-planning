(define (problem problem4) (:domain domain2)
(:objects
   train1 train2  - slt
   train3 - sng
   v1 v2 v3 t0 t1 t2 t3  - trackpart
   track1 track2  - track
)
(:init
   (at train1 v2)
   (nextTo v1 v2)
   (nextTo v2 v1)
   (at train2 v1)
   (nextTo v2 v3)
   (nextTo v3 v2)
   (at train3 v3)
   (nextTo v1 t0)
   (nextTo t0 v1)
   (nextTo t0 t1)
   (nextTo t1 t0)
   (free t0)
   (free t1)
   (nextTo t0 t2)
   (nextTo t2 t0)
   (free t2)
   (nextTo t1 t3)
   (nextTo t3 t1)
   (free t3)
   (onTrack t1 track1)
   (onTrack t3 track1)
   (onTrack t2 track2)
   (onPath v1)
   (onPath v2)
   (onPath v3)
   (switch t0)
   (= (timestep) 0)
   (= (arrive train1) 5)
   (= (arrive train2) 3)
   (= (arrive train3) 6)
   (= (depart train1) 0)
   (= (depart train2) 0)
   (= (depart train3) 0)
   (= (length train1) 3)
   (= (length train2) 4)
   (= (length train3) 3)
   (= (capacity track1) 7)
   (= (capacity track2) 4)
)
(:goal (and
   (exists (?t - slt) (and (at ?t v1) (<= (depart ?t) 25) (= (length ?t) 4)))
   (exists (?t - slt) (and (at ?t v2) (<= (depart ?t) 25) (= (length ?t) 3)))
   (exists (?t - sng) (and (at ?t v3) (<= (depart ?t) 17) (= (length ?t) 3)))
   (forall (?t - trainunit) (hasBeenParked ?t))
))
; (:metric minimize (timestep))
)
